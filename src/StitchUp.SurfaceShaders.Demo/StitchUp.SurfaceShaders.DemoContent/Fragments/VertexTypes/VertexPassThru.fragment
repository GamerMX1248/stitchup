fragment vertex_pass_thru;

[parameters]
matrix wvp : WORLDVIEWPROJECTION;
matrix world : WORLD;

[interpolators]
float3 worldPosition;

[vs]
__hlsl__
void main(INPUT input, inout OUTPUT output)
{
	float3 inputPosition;
	import(_Position, inputPosition = _Position);
	
	output.position = mul(float4(inputPosition, 1), wvp);

	output(worldPosition, mul(float4(inputPosition, 1), world));
}
__hlsl__

[ps]
__hlsl__
void main(INPUT input, inout OUTPUT output)
{
	export(float3, _WorldPosition, input.worldPosition);
}
__hlsl__